@using MVCAssignment.Models.Search
@model SearchParametersModel

@{
    ViewBag.Title = "Search Parameter Entry Screen";
}

<section class="app_card">
    <div class="grid_header">
        <div>
            @Html.Label("UserName")
            <div class="custom_select">
                @Html.DropDownListFor(m => m.SelectedUser, Model.AvailableUsers, "Select User",new { id= "SelectedUser" })
            </div>
        </div>
        <div>
            <button id="addParameterButton" class="custom_btn">Add Parameter</button>
        </div>
    </div>

    <div>
        <table class="table w-100 parameter_table" id="renderParameterForm">
            <thead>
                <tr>
                    <th>
                        Is Required
                    </th>
                    <th>
                        Field Name
                    </th>
                    <th>
                        Datatype
                    </th>
                    <th>
                        Control Type
                    </th>

                    <th>
                        MaxFieldLength
                    </th>
                    <th>
                        MinLimit
                    </th>
                    <th>
                        MaxLimit
                    </th>
                    <th> MaskPattern</th>
                </tr>
            </thead>
            <tbody  id="renderParameterForm">
                @*<tr class="form-data">
                        @Html.Partial("_ParameterForm", Model)
                    </tr>*@
                @Html.Partial("_ParameterForm", Model)
            </tbody>
            @*<tr id="renderParameterForm" class="form-data">
                </tr>*@
        </table>
    </div>

    <div class="text-center">
        <button id="btnSubmit" class="custom_btn">Submit</button>
    </div>
</section>



<script>
    $(document).ready(function () {
        $("#btnSubmit").click(function (e) {
            e.preventDefault();
            var formData = {
                UserId: $('#SelectedUser').val(),
                Parameters: []
            };

            $(".form-data").each(function () {
                var data = {
                    FieldName: $(this).find("[name$='FieldName']").val(),
                    SelectedDataType: $(this).find("[name$='SelectedDataType']").val(),
                    SelectedControlType: $(this).find("[name$='SelectedControlType']").val(),
                    IsRequired: $(this).find("[name$='IsRequired']").is(":checked"),
                    MaxFieldLength: $(this).find("[name$='MaxFieldLength']").val(),
                    MinLimit: $(this).find("[name$='MinLimit']").val(),
                    MaxLimit: $(this).find("[name$='MaxLimit']").val(),
                    MaskPattern: $(this).find("[name$='MaskPattern']").val()
                };
                formData.Parameters.push(data);
            });


            $.ajax({
                url: '/Parameter/Create',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (result) {
                    alert("data submit")
                    location.reload()
                },
                error: function (error) {
                    alert(error)

                }
            });
        });



        function loadParameterForm() {
            $.ajax({
                url: '/Parameter/GetParameterForm',
                type: 'GET',
                success: function (data) {
                    $('#renderParameterForm').append(data);
                },
                error: function () {
                    alert('An error occurred while loading the form');
                }
            });
        }

        $('#addParameterButton').click(function () {
            loadParameterForm();
        });


    });
</script>
