@using MVCAssignment.Models.Search
@model SearchParametersModel

@{
    ViewBag.Title = "Search Parameter Entry Screen";
}

<div class="jumbotron">
    <h1>ASP.NET</h1>
</div>
<button id="addParameterButton">Add Parameter</button>


<div class="row">
    <div>
        @Html.Label("UserName")
    </div><div>
        @Html.DropDownListFor(m => m.SelectedUser, Model.AvailableUsers, "Select User")
    </div>
</div>

<table class="form-">
    <thead>
        <tr>
            <td>
                Field Name
            </td>
            <td>
                Datatype
            </td>
            <td>
                Control Type
            </td>
            <td>
                Is Required
            </td>
            <td>
                MaxFieldLength
            </td>
            <td>
                MinLimit
            </td>
            <td>
                MaxLimit
            </td>
            <td> MaskPattern</td>
        </tr>
    </thead>
    <tr  class="form-data">
        @Html.Partial("_ParameterForm", Model)
    </tr>
    <tr id="renderParameterForm"  class="form-data">

    </tr>
</table>


<!--<div id="renderParameterForm">-->
    @*here we will adding form*@
<!--</div>-->
<div class="row">
    <div>
        <button id="btnSubmit">Submit</button>
    </div>
</div>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        $("#btnSubmit").click(function (e) {
            e.preventDefault();
            var formData = {
                UserId: $('#SelectedUser').val(),
                Parameters: []
            };

            $(".form-data").each(function () {
                var data = {
                    FieldName: $(this).find("[name$='FieldName']").val(),
                    SelectedDataType: $(this).find("[name$='SelectedDataType']").val(),
                    SelectedControlType: $(this).find("[name$='SelectedControlType']").val(),
                    IsRequired: $(this).find("[name$='IsRequired']").is(":checked"),
                    MaxFieldLength: $(this).find("[name$='MaxFieldLength']").val(),
                    MinLimit: $(this).find("[name$='MinLimit']").val(),
                    MaxLimit: $(this).find("[name$='MaxLimit']").val(),
                    MaskPattern: $(this).find("[name$='MaskPattern']").val()
                };
                formData.Parameters.push(data);
            });


            $.ajax({
                url: '/Parameter/Create',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(formData),
                success: function (result) {
                    alert("data submit")
                    location.reload()
                },
                error: function (error) {
                    alert(error)

                }
            });
        });



        function loadParameterForm() {
            $.ajax({
                url: '/Parameter/GetParameterForm',
                type: 'GET',
                success: function (data) {
                    $('#renderParameterForm').append(data);
                },
                error: function () {
                    alert('An error occurred while loading the form');
                }
            });
        }

        $('#addParameterButton').click(function () {
            loadParameterForm();
        });


    });
</script>
