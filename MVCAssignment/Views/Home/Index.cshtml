@model MVCAssignment.ViewModels.ParameterViewModel

<h2>Search</h2>

<form id="searchForm">
    <table cellpadding="0" cellspacing="0" border="1" width="50%">
        @{
            int index = 0;
        }
        @foreach (var parameter in Model.SearchParameters)
        {

            <tr>
                <td>
                    @parameter.FieldName
                    <input type="hidden" name="data[@index].FieldName" value="@parameter.FieldName" />
                </td>
                <td>

                    @{ switch (parameter.SelectedControlType)
                        {
                            case MVCAssignment.Enums.ControlTypeEnum.TextBox:
                                <input type="text" name="data[@index].Value" maxlength="@parameter.MaxFieldLength" required="@parameter.Required" pattern="@parameter.MaskPattern" />
                                break;

                            case MVCAssignment.Enums.ControlTypeEnum.NumericTextBox:
                                <input type="number" name="data[@index].Value" min="@parameter.MinLimit" max="@parameter.MaxLimit" maxlength="=@parameter.MaxFieldLength" required="@parameter.Required" pattern="@parameter.MaskPattern" />
                                break;

                            case MVCAssignment.Enums.ControlTypeEnum.DateTime:
                                <input type="date" name="data[@index].Value" required="@parameter.Required" />
                                break;
                        }
                    }

                </td>
            </tr>
            { index = index + 1; }
        }

        <tr>
            <td colspan="2">
                <button type="submit">Submit</button>
            </td>
        </tr>

    </table>

</form>

<div id="userData">

</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        $("#searchForm").submit(function (event) {
            event.preventDefault();



            // Serialize the form data
            var formData = $(this).serialize();

            

            $.ajax({
                type: "POST",
                url: "/User/Submit/",
                data: formData,
                success: function (data) {
                    console.log(data);
                    $("#userData").html(data)
                },
                error: function () {
                    console.error("Error occurred .");
                }
            });
        });
    });
</script>
